{"version":3,"sources":["pages/sign_in/SignIn.jsx","pages/sign_up/SignUp.jsx","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["SignIn","props","handleChange","e","target","name","type","checked","value","value_","setState","console","log","state","handleFormSubmit","email","password","rememberMe","localStorage","setItem","getItem","error","this","onSubmit","noValidate","className","placeholder","onChange","id","htmlFor","length","to","Component","emailRegex","RegExp","appRoutes","path","exact","component","handleSubmit","preventDefault","formErrors","rest","valid","Object","values","forEach","val","formValid","firstName","lastName","test","App","map","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5db5b25.chunk.js","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            error: ''\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        const {name, type, checked, value} = e.target;\r\n        const value_ = type === 'checkbox' ? checked : value;\r\n        this.setState({[name]: value_});\r\n\r\n        console.log(this.state);\r\n    };\r\n\r\n    handleFormSubmit = () => {\r\n        const {email, password, rememberMe} = this.state;\r\n        localStorage.setItem('rememberMe', rememberMe);\r\n\r\n        if (email !== localStorage.getItem('email') || password !== localStorage.getItem('password')) {\r\n            this.setState({error: 'INVALID DATA'});\r\n        }\r\n\r\n        // localStorage.setItem('rememberMe', rememberMe);\r\n        // localStorage.setItem('email', rememberMe ? email : '');\r\n        // localStorage.setItem('password', rememberMe ? password : '');\r\n    };\r\n\r\n    componentDidMount() {\r\n        const rememberMe = localStorage.getItem('rememberMe') === 'true';\r\n        const email = rememberMe ? localStorage.getItem('email') : '';\r\n        const password = rememberMe ? localStorage.getItem('password') : '';\r\n        this.setState({email, password, rememberMe});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1>Sign In</h1>\r\n                <form onSubmit={this.handleFormSubmit} noValidate>\r\n                    <div className=\"email\">\r\n                        <input\r\n                            className=''\r\n                            name='email'\r\n                            type='email'\r\n                            placeholder='Email *'\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"password\">\r\n                        <input\r\n                            className=''\r\n                            name='password'\r\n                            type='password'\r\n                            placeholder='Password *'\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form_checkbox_block\">\r\n                        <input type=\"checkbox\"\r\n                               name=\"rememberMe\"\r\n                               checked={this.state.rememberMe}\r\n                               onChange={this.handleChange}\r\n                               id=\"custom-checkbox\"\r\n                               className=\"form_checkbox\"/>\r\n                        <label htmlFor=\"custom-checkbox\">Remember me</label>\r\n                    </div>\r\n                    <div className=\"submission_btn\">\r\n                        <button type='submit'>Sign In</button>\r\n                        {this.state.error.length > 0 && (<span>{this.state.error}</span>)}\r\n\r\n                    </div>\r\n                    <div className=\"form_links\">\r\n                        <Link to=\"/sign_up/\">\r\n                            <p>Forgot password?</p>\r\n                        </Link>\r\n                        <Link to=\"/sign_up/sign_up\">\r\n                            <p>Don't have an account? Sing Up</p>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n\r\nconst formValid = ({formErrors, ...rest}) => {\r\n    let valid = true;\r\n\r\n    //Validate form errors being empty\r\n    Object.values(formErrors).forEach(val => {\r\n        val.length > 0 && (valid = false);\r\n    });\r\n\r\n    //Validate the form was filled out\r\n    Object.values(rest).forEach(val => {\r\n        val === null && (valid = false)\r\n    });\r\n\r\n    return valid;\r\n}\r\n\r\nclass SignUp extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: null,\r\n            lastName: null,\r\n            email: null,\r\n            password: null,\r\n            formErrors: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                password: \"\"\r\n            },\r\n            checked: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (formValid(this.state)) {\r\n            console.log(`\r\n            --Submitting--\r\n            First Name: ${this.state.firstName}\r\n            Last Name: ${this.state.lastName}\r\n            Email: ${this.state.email}\r\n            Password: ${this.state.password}\r\n            Checked: ${this.state.checked}`)\r\n        } else {\r\n            console.log('Form invalid - display error message')\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, value, type,checked } = e.target;\r\n        let formErrors = this.state.formErrors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n                formErrors.firstName =\r\n                    value.length < 3\r\n                        ? 'minimum 3 characters required'\r\n                        : '';\r\n                break;\r\n            case 'lastName':\r\n                formErrors.lastName =\r\n                    value.length < 3\r\n                        ? 'minimum 3 characters required'\r\n                        : '';\r\n                break;\r\n            case 'email':\r\n                formErrors.email =\r\n                    emailRegex.test(value)\r\n                        ? ''\r\n                        : 'invalid email address';\r\n                break;\r\n            case 'password':\r\n                formErrors.password =\r\n                    value.length < 8\r\n                        ? 'minimum 8 characters required'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const value_ = type === 'checkbox' ? checked : value;\r\n\r\n        this.setState({formErrors, [name]: value_}, () => console.log(this.state));\r\n        localStorage.setItem(name, value_);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { formErrors } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <h1>Sign Up</h1>\r\n                <form onSubmit={this.handleSubmit} noValidate>\r\n                    <div className=\"firstName\">\r\n                        <input\r\n                            className={formErrors.firstName.length > 0 ? \"error\" : null}\r\n                            name='firstName'\r\n                            type='text'\r\n                            placeholder='First Name *'\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.firstName.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"lastName\">\r\n                        <input\r\n                            className={formErrors.lastName.length > 0 ? \"error\" : null}\r\n                            name='lastName'\r\n                            type='text'\r\n                            placeholder='Last Name *'\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.lastName.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"email\">\r\n                        <input\r\n                            className={formErrors.email.length > 0 ? \"error\" : null}\r\n                            name='email'\r\n                            type='email'\r\n                            placeholder='Email *'\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.email.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.email}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"password\">\r\n                        <input\r\n                            className={formErrors.password.length > 0 ? \"error\" : null}\r\n                            name='password'\r\n                            type='password'\r\n                            placeholder='Password *'\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {formErrors.password.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.password}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form_checkbox_block\">\r\n                        <input type=\"checkbox\"\r\n                               name='checked'\r\n                               checked={this.state.checked}\r\n                               onChange={this.handleChange}\r\n                               id=\"custom-checkbox\"\r\n                               className=\"form_checkbox\" />\r\n                        <label htmlFor=\"custom-checkbox\">I want to receive inspiration, markting promotions and updates\r\n                            via email</label>\r\n                    </div>\r\n                    <div className=\"submission_btn\">\r\n                        <button type='submit'>Sign Up</button>\r\n                    </div>\r\n                    <div className = \"form_links\">\r\n                        <Link to = \"/sign_up/sign_in\">\r\n                            <p>Already have an account? Sing In</p>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default SignUp;","import SignIn from \"../pages/sign_in/SignIn\";\r\nimport SignUp from \"../pages/sign_up/SignUp\";\r\n\r\n\r\nexport const appRoutes = [\r\n    {\r\n        path: '/sign_up/',\r\n        exact: true,\r\n        component: SignIn\r\n    },\r\n    {\r\n        path: '/sign_up/sign_in',\r\n        component: SignIn\r\n    },\r\n    {\r\n        path: '/sign_up/sign_up',\r\n        component: SignUp\r\n    },\r\n];","import {Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport {appRoutes} from './routes/index'\n\nfunction App() {\n  return (\n      <div className=\"wrapper\">\n          <div className=\"form-wrapper\">\n              <div className='form_img'></div>\n              <Switch>\n                  {appRoutes.map(route =>(\n                      <Route key={route.path} {...route}/>\n                  ))}\n                  <Route path=\"*\">\n                      <h1 className=\"noPage\">No found page </h1>\n                  </Route>\n              </Switch>\n              <div className = \"form_copyright\">Copyright &#169; Your Website 2021</div>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}